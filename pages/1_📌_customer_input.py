# 1_📌_customer_input.py
#
#     고객 추천 모델 페이지 : 고객이 정보를 입력하면 그에 따른 차량 종류 추천하는 시스템
#         - 5개 모델 제작 : 각각 정확도는 98% 정도이지만, 추천 차량이 약간씩 다름
#             - 입력 정보 : 거주 지역, 예산, 차량 사이즈, 차량 유형, 연료 구분
#             - 출력 정보 : 추천 차종 (1~5개)
#                - 5개 모델의 연산 결과를 하나의 리스트로 제작, 해당 리스트 내 유니크한 값들을 모두 추천
#         - 신용 카드로 구매할 시 10% 포인트로 제공한다는 것 공지하면서, 가격대가 조금 더 높은 차량 목록 자연스럽게 추천
#         - 전기차가 아닌 차종 선택 시 대안이 될 수 있는 전기차 추천 동반 : 지역에 따른 보조금 차이 반영하여 추천
#
#     화면에 보여질 내용
#         - 정보 입력란 5개 : 예산, 거주 지역, 차량 사이즈, 차량 유형, 연료 구분
#             - 예산 : 직접 입력
#             - 나머지 4개 : 드롭다운 메뉴 선택
#         - 추천 받기 버튼 : 추천 결과를 보여주는 버튼
#         - 결과 출력 : 추천 결과를 1개~5개까지 보여줌 -> 순위 없이 결과 리스트 내부의 값들을 랜덤 순서로 보여줌
#         - 신용 카드 혜택 안내 : 10% 포인트 제공
#             - 팝업창 혹은 info 메시지 형태 : 약간의 딜레이(로딩 동그라미) 후 리스트 보여줌
#             - 버튼 형태 : 클릭 시 가격대 조금 더 높은 차량 N개 정보 보여줌
#         - 전기차 추천 : 전기차가 아닌 차종 선택 시 대안으로 전기차 추천
#             - 지역에 따른 보조금 차이 반영하여 자동으로 추천 : 1~3대 추천


import streamlit as st

st.title("📌 고객 정보 입력 & 제품 추천")

# 고객 정보 입력
name = st.text_input("이름을 입력하세요:")
age = st.number_input("나이 입력", min_value=18, max_value=100)
category = st.selectbox("관심 카테고리", ["가전", "의류", "식품", "화장품"])

# 추천 버튼 (나중에 머신러닝 모델 연동 예정)
if st.button("추천 받기"):
    st.success(f"{name}님에게 추천하는 제품을 곧 제공할 예정입니다!")
